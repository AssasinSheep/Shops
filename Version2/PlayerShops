package shops;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.java.JavaPlugin;

public class PlayerShops extends JavaPlugin implements Listener, CommandExecutor {
	
	@Override
	public void onEnable() {
		System.out.println(ChatColor.GREEN + "Playershops enabled");
		this.getCommand("shop").setExecutor(new Shop(this));
		
		//player files config
		Playerdata.setup();
		Playerdata.get().options().copyDefaults(true);
		Playerdata.save();
		
		
		//reg config
		FileConfiguration config = getConfig();
		config.addDefault("messages.teleport-to-spawn", "&4Teleported to spawn");
		config.options().copyDefaults(true);
		saveConfig();
		
	}
	
	public void onDisable() {
		System.out.println(ChatColor.RED + "Playershops disabled");
	}
	
	
public boolean onCommand(CommandSender sender, Command cmd, String alias, String[] args) {
	
	FileConfiguration cfg = YamlConfiguration.loadConfiguration(new File("plugins/PlayerShops", "Playerdata.yml"));
	
	class Shop {
		
		private boolean Isclosed;  //check if closed
		private String noperm;  //no perm message
		private List<String> Bannedlist = new ArrayList<String>(); //banned list for using /playershops
		private String isdelay; //is there a delay
		private int delay; //delay for command
	}
	
	
	Player p = (Player)sender;
	if(cmd.getName().equalsIgnoreCase("playershops")) {
		if(p.hasPermission("Shop.teleport")) {
			if(args.length == 0) {
				p.sendMessage("please enter a valid player name");
			}
			if(args.length == 1) {
				if(args[0].equalsIgnoreCase("test")) {
					p.sendMessage(ChatColor.RED + "Telporting to " + "Shop");
				}
			}
			
		}
		else {
			sender.sendMessage(color(this.getConfig().getString("messages.no-permission")));
		}
	
		
	}
	
	
	
	return false;
	
}
public String color(String message) {
	return ChatColor.translateAlternateColorCodes('&', message);
}
}
